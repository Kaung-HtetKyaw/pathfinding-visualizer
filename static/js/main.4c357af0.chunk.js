/*! For license information please see main.4c357af0.chunk.js.LICENSE.txt */
(this["webpackJsonppathfinding-visualizer"]=this["webpackJsonppathfinding-visualizer"]||[]).push([[0],{104:function(e,t,n){},105:function(e,t,n){"use strict";n.r(t);var i=n(0),o=n.n(i),a=n(37),s=n.n(a),r=n(3),c=(n(96),n(2)),l=function(e){var t=e.y,n=(e.name,e.isStart),o=e.isEnd,a=e.isWall,s=e.isWeight,l=(e.isClosed,e.x),h=e.start,d=e.end,u=e.grid,f=(e.visited,e.isGridDirty),g=e.isStartSelected,m=e.isEndSelected,b=(e.isMousePressed,e.handleMouseUp),j=e.handleMouseDown,p=e.handleMouseEnter,v=e.toggleSpecialNode,x=e.relocateStart,O=e.relocateEnd,y=Object(i.createRef)(),S=Object(i.useState)(!1),w=Object(r.a)(S,2),z=(w[0],w[1],o?"node-finish":n?"node-start":a?"node-wall":s?"node-weight":""),k=Object(i.useState)(""),N=Object(r.a)(k,2),W=N[0];N[1];Object(i.useEffect)((function(){y.current&&(y.current.classList.remove("node-visited"),y.current.classList.remove("node-visited-no-ani"),y.current.classList.remove("node-shortest-path"),y.current.classList.remove("node-shortest-path-no-ani"),y.current.classList.remove("node-weight-visited"))}),[h,d,f,u]),Object(i.useEffect)((function(){!a&&y.current&&y.current.classList.remove("node-wall")}),[a]);return Object(c.jsx)("div",{style:{margin:0,width:"25px",height:"25px",display:"inline-block"},onMouseDown:j,onMouseUp:b,onMouseEnter:p,onClick:function(){n||o?v(n,o):(g&&x(l,t),m&&O(l,t))},children:Object(c.jsx)("div",{ref:y,id:"node-".concat(l,"-").concat(t),className:"node ".concat(z," ").concat(W)})})},h=o.a.memo(l),d=function(e){return e<10?"0".concat(e):e},u=function(e,t){return"".concat(d(e)).concat(d(t))},f=function(e,t,n){return n.x===e&&n.y===t},g=function(e,t,n){return n.x===e&&n.y===t};function m(e,t,n,i){for(var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=[],s=0;s<e;s++){for(var r=t,c=[],l=0;l<r;l++)c.push(b(1,s,l,n,i));a.push(c)}return o&&j(a,o),a}function b(e,t,n,i,o){return{x:t,y:n,visited:!1,closed:!1,value:e,parent:null,f:0,g:0,h:0,name:u(t,n),weight:0}}function j(e){for(var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.length,i=0;i<n;i++)for(var o=e[i].length,a=0;a<o;a++){var s=e[i][a];this.setCostsToNeighbours(e,s,t)}}function p(e,t,n){for(var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=t.x,a=t.y,s=[[-1,0],[0,1],[1,0],[0,-1]],r=[],c=0;c<s.length;c++){var l=s[c],h=Math.abs(l[0]+l[1]),d=e[o+l[0]],u=d?d[a+l[1]]:void 0;u&&!n[u.name]&&(2===h&&(u.diagonal=!0),i?r.unshift(u):r.push(u))}return r}function v(e,t){return Math.floor(Math.random()*(t-e+1))+e}function x(e,t,n){for(var i=[],o=t[n.x][n.y],a=e;a.parent;){i.push(a);var s=a.parent,r=s.x,c=s.y;a=t[r][c]}return i.push(o),i.reverse()}function O(e,t){var n=e.x,i=e.y,o=t.x,a=t.y;return n===o&&i===a}var y=n(131),S=n(119),w=n(122),z=n(130),k=n(116),N=n(120),W=n(128),M=n(129),C=n(126),D=n(48),E=n(49),I=function(){function e(t){Object(D.a)(this,e),this.content=[],this.getScore=t}return Object(E.a)(e,[{key:"push",value:function(e){this.content.push(e),this.bubbleUp(this.content.length-1)}},{key:"pop",value:function(){var e=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.sinkDown(0)),e}},{key:"getLastItem",value:function(){return this.content[this.content.length-1]}},{key:"remove",value:function(e){for(var t=this.content.length,n=this.getScore(e),i=0;i<t;i++)if(n===this.getScore(this.content[i])){var o=this.content.pop();if(i===t-1)break;this.content[i]=o,this.bubbleUp(i),this.sinkDown(i);break}}},{key:"size",value:function(){return this.content.length}},{key:"reorderNode",value:function(e){var t=this.content.indexOf(e);this.bubbleUp(t),this.sinkDown(t)}},{key:"sinkDown",value:function(e){for(var t=e,n=this.content[t],i=this.getScore(n),o=this.content.length;;){var a=2*(t+1),s=a-1,r=this.content[a],c=this.getScore(r),l=this.content[s],h=this.getScore(l),d=null;if(s<o&&h<i&&(d=s),a<o&&c<(null===d?i:h)&&(d=a),null===d)break;this.content[t]=this.content[d],this.content[d]=n,t=d}}},{key:"bubbleUp",value:function(e){for(var t=e,n=this.content[t],i=this.getScore(n);t>0;){var o=Math.floor((t-1)/2),a=this.content[o];if(i>=this.getScore(a))break;this.content[o]=n,this.content[t]=a,t=o}}}]),e}(),B=new I((function(e){return null===e||void 0===e?void 0:e.g}));var L=new I((function(e){return null===e||void 0===e?void 0:e.f}));function A(e,t){return 1*(Math.abs(e.x-t.x)+Math.abs(e.y-t.y))}function F(e,t){return 1*(Math.abs(e.x-t.x)+Math.abs(e.y-t.y))}var P=new I((function(e){return null===e||void 0===e?void 0:e.h}));var T={Dijkstra:{name:"Dijkstra",about:"is a father of path-finding algorithms and guarantees the shortest path.",algorithm:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},a=e[t.x][t.y],s=B,r=[],c=[],l=0;for(s.push(a),a.visited=!0,r.push(a);s.size()>0;){var h=s.pop();if(c.push(h),l++,O(h,n)||t.x===n.x&&t.y===n.y){var d=x(h,e,t);return console.log("considered nodes: ",l),{path:d,visitedNodes:r,closedNodes:c}}h.closed=!0;for(var u=p(e,h,i),f=u.length,g=0;g<f;g++){var m=u[g];if(!m.closed&&!i[m.name]){var b=h.g+(o[m.name]?15:1),j=m.visited;(!j||b<m.g)&&(m.parent={x:h.x,y:h.y},m.g=b,j?s.reorderNode(m):(m.visited=!0,s.push(m),r.push(m)))}}}return console.log("exhausted"),{path:[],visitedNodes:r,closedNodes:c}},weighted:!0,shortest:!0},Astar:{name:"A*",about:"is arguably the best path-finding algorithm. It combines the pieces of information that Dijkstra\u2019s Algorithm uses (favoring vertices that are close to the starting point) and heuristics(estimated distance from the node's current positon to goal). It is faster than Dijkstra and guarantees shortest path. ",algorithm:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:A,s=e[t.x][t.y],r=L,c=[],l=[];r.push(s),s.visited=!0,c.push(s);for(var h=0;r.size()>0;){var d=r.pop();if(l.push(d),h++,O(d,n)){var u=x(d,e,t);return console.log("considered nodes: ",h),{path:u,visitedNodes:c,closedNodes:l}}d.closed=!0;for(var f=p(e,d,i),g=f.length,m=0;m<g;m++){var b=f[m];if(!b.closed&&!i[b.name]){var j=d.g+(o[b.name]?15:1),v=b.visited;(!v||j<b.g)&&(b.parent={x:d.x,y:d.y},b.h=b.h||Math.pow(a(b,n),1.1),b.g=j,b.f=b.g+b.h,v?r.reorderNode(b):(b.visited=!0,r.push(b),c.push(b)))}}}return{path:[],visitedNodes:c,closedNodes:l}},weighted:!0,shortest:!0},BFS:{name:"Breadth First Search",about:"is a graph traversal algorithm that starts traversing the graph from root node and explores all the neighbouring nodes. It is slower than both Dijkstra and A* but guarantees shortest path. ",algorithm:function(e,t,n,i){var o=e[t.x][t.y],a=[],s=[],r=[o];o.visited=!0,a.push(o);for(var c=0;Object.keys(r).length>0;){var l=r[0];if(s.push(l),c++,l.x===n.x&&l.y===n.y){var h=x(l,e,t);return console.log("Number of nodes considered: ",c),{path:h,visitedNodes:a,closedNodes:s}}r.shift(),l.closed=!0;for(var d=p(e,l,i),u=d.length,f=0;f<u;f++){var g=d[f];g.closed||i[g.name]||(g.visited||(g.visited=!0,g.parent={x:l.x,y:l.y},r.push(g),a.push(g)))}}return{path:[],visitedNodes:a,closedNodes:s}},weighted:!1,shortest:!0},GBFS:{name:"Greedy Best First Search",about:"is like A* but it only uses heuristics to search to find the goal. It is faster than A*, Dijkstra, Breadth First Search but does not guarantee shortest path. ",algorithm:function(e,t,n,i,o){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:F,s=e[t.x][t.y],r=[],c=[],l=P;l.push(s),s.visited=!0,r.push(s);for(var h=0;l.size()>0;){var d=l.pop();if(c.push(d),d.closed=!0,h++,O(d,n)){var u=x(d,e,t);return console.log("Number of nodes considered: ",h),{path:u,closedNodes:c,visitedNodes:r}}for(var f=p(e,d,i),g=f.length,m=0;m<g;m++){var b=f[m];if(!b.closed&&!i[b.name]){var j=a(b,n)+(o[b.name]?15:0),v=b.visited;(!v||j<b.h)&&(b.parent={x:d.x,y:d.y},b.h=j,v?l.reorderNode(b):(b.visited=!0,l.push(b),r.push(b)))}}}return{path:[],closedNodes:c,visitedNodes:r}},weighted:!0,shortest:!1},DFS:{name:"Depth First Search",about:" starts at the root node (selecting some arbitrary node as the root node in the case of a graph) and explores as far as possible along each branch before backtracking. It is slower than all of the above algorithms and does not guarantee shortest path. ",algorithm:function(e,t,n,i){var o=e[t.x][t.y],a=[],s=[],r=[o];o.visited=!0,a.push(o);for(var c=0;Object.keys(r).length>0;){var l=r.pop();if(l.closed=!0,s.push(l),l.visited=!0,a.push(l),c++,l.x===n.x&&l.y===n.y){var h=x(l,e,t);return console.log("Number of nodes considered: ",c),{path:h,visitedNodes:a,closedNodes:s}}for(var d=p(e,l,i,!0),u=d.length,f=0;f<u;f++){var g=d[f];g.closed||i[g.name]||(g.visited||(g.parent={x:l.x,y:l.y},r.push(g)))}}return{path:[],visitedNodes:a,closedNodes:s}},weighted:!1,shortest:!1}};var R,U,V,H,K={},G=[];function J(e,t,n,i,o,a,s){if(t){if(i-n<2)return;var r=2*Math.floor(_(n,i)/2);!function(e,t,n,i){for(var o=2*Math.floor(_(t,n)/2)+1,a=t;a<=n;a++){if(f(i,a,V)||g(i,a,H))return;a===o?e[i][a].isWall=!1:(e[i][a].isWall=!0,K[e[i][a].name]=!0,G.push(e[i][a]))}}(e,o,a,r),J(e,!1,n,r-1,o,a,s),J(e,!1,r+1,i,o,a,s)}else{if(a-o<2)return;var c=2*Math.floor(_(o,a)/2);!function(e,t,n,i){for(var o=2*Math.floor(_(t,n)/2)+1,a=t;a<=n;a++){if(f(a,i,V)||g(a,i,H))return;a===o?e[a][i].isWall=!1:(e[a][i].isWall=!0,K[e[a][i].name]=!0,G.push(e[a][i]))}}(e,n,i,c),J(e,!0,n,i,o,c-1,s),J(e,!0,n,i,c+1,a,s)}}function _(e,t){return Math.floor(Math.random()*(t-e+1)+e)}var Q={Random:{name:"Basic Random Maze",algorithm:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[[]],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,i=e.length,o={},a=[],s=0;s<i;s++)for(var r=e[s].length,c=0;c<r;c++){var l=e[s][c];if(!f(s,c,t)&&!g(s,c,n)){var h=v(0,3);h?l.isWall=!1:(l.isWall=!0,o[l.name]=!0,a.push(l))}}return{walls:o,order:a}},about:"blah blah"},Stair:{algorithm:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[[]],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,i=e.length,o=e[0].length,a=e.length-1,s=0,r={},c=[];a>0&&s<o;){var l=e[a][s];f(a,s,t)||g(a,s,n)||(l.isWall=!0,r[l.name]=!0,c.push(l)),a--,s++}for(;a<i-2&&s<o;){var h=e[a][s];f(a,s,t)||g(a,s,n)||(h.isWall=!0,r[h.name]=!0,c.push(h)),a++,s++}for(;a>0&&s<o-1;){var d=e[a][s];f(a,s,t)||g(a,s,n)||(d.isWall=!0,r[d.name]=!0,c.push(d)),a--,s++}return{walls:r,order:c}},name:"Simple Stair Pattern",about:"blah blah"},Recursive_Division:{name:"Recursive Division",algorithm:function(e,t,n){U=e.length,R=e[0].length,V=t,H=n,function(e){for(var t=0;t<U;t++)if(0==t||t==U-1)for(var n=0;n<R;n++)f(t,n,V)||g(t,n,H)||(e[t][n].isWall=!0,K[e[t][n].name]=!0,G.push(e[t][n]));else f(t,0,V)||g(t,0,H)||(e[t][0].isWall=!0,K[e[t][0].name]=!0,G.push(e[t][0])),f(t,R-1,V)||g(t,R-1,H)||(e[t][R-1].isWall=!0,K[e[t][R-1].name]=!0,G.push(e[t][R-1]))}(e);var i=function(e){var t=_(1,e.length-1);return e[e.length-1][t].entrance=!0,t}(e);return J(e,!0,1,U-2,1,R-2,i),{walls:K,order:G}},about:"blah blah"},WeightMaze:{name:"Basic Weight Maze",algorithm:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[[]],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,i=e.length,o={},a=[],s=0;s<i;s++)for(var r=e[s].length,c=0;c<r;c++){var l=e[s][c];if(!f(s,c,t)&&!g(s,c,n)){var h=v(0,3);h||(o[l.name]=!0,a.push(l))}}return{walls:o,order:a}},about:"blah blah"}},Y={Fast:15,Normal:25,Slow:40},q=n(115),X=n(125),Z=n(118),$=n(83),ee=function(e){var t=e.children;return Object(c.jsxs)(W.a,{mt:5,justifyContent:"start",alignItems:"start",children:[Object(c.jsx)(q.a,{transform:"rotate(180deg)",mt:2,as:$.a}),Object(c.jsx)(k.a,{children:t})]})},te=function(e){var t=e.isOpen,n=(e.onOpen,e.onClose);return Object(c.jsxs)(X.a,{size:"full",scrollBehavior:"inside",isOpen:t,onClose:n,children:[Object(c.jsx)(X.f,{}),Object(c.jsxs)(X.d,{pb:5,display:"flex",flexDir:"column",justifyContent:"center",alignItems:"center",children:[Object(c.jsx)(X.e,{color:"#0C3547",textAlign:"center",fontSize:"3xl",children:"Welcome to Pathfinding Visualizer"}),Object(c.jsx)(X.c,{}),Object(c.jsx)(X.b,{display:"flex",justifyContent:"center",color:"#0C3547",children:Object(c.jsxs)(k.a,{maxW:{base:"100%",lg:"70%"},children:[Object(c.jsx)(Z.a,{as:"h5",fontSize:"xl",textAlign:"center",children:"This tutorial will walk you through all features of Pathfind Visualizer"}),Object(c.jsxs)(ee,{children:[Object(c.jsx)(Z.a,{fontWeight:"bold",fontSize:"xl",children:"What is a pathfinding algorithm ?"}),Object(c.jsx)(Z.a,{as:"li",fontSize:"17px",children:"Pathfinding algorithms address the problem of finding a path from a source to a destination avoiding obstacles and minimizing the costs (time, distance, risks, fuel, price, etc.)"}),Object(c.jsx)(Z.a,{as:"li",fontSize:"17px",children:"All pathfinding algorithms are implemented for 2D grid. Movement for a grid to its Top, Right, Bottom, Left neighbours will cost of 1"})]}),Object(c.jsxs)(ee,{children:[Object(c.jsx)(Z.a,{fontWeight:"bold",fontSize:"xl",children:"Which algorithms are included in this application ?"}),Object.values(T).map((function(e){return Object(c.jsxs)(Z.a,{mb:2,as:"li",fontSize:"17px",children:[Object(c.jsx)(Z.a,{as:"span",display:"inline-block",fontWeight:"bold",children:e.name})," ",Object(c.jsxs)("span",{children:["(",e.weighted?"weighted":"unweighted","):"]})," ",Object(c.jsx)("span",{children:e.about})]})})),Object(c.jsx)(Z.a,{mb:2,as:"li",fontSize:"17px",children:"Note that some algorithms are unweighted, while others are weighted. Unweighted algorithms do not take turns or weight nodes into account, whereas weighted ones do. Additionally, not all algorithms guarantee the shortest path."})]}),Object(c.jsxs)(ee,{children:[Object(c.jsxs)(Z.a,{fontWeight:"bold",fontSize:"xl",children:["How to add walls and weights"," "]}),Object(c.jsxs)(Z.a,{as:"li",fontSize:"17px",children:["Click on the grid to add a wall. Click on the grid while pressing"," ",Object(c.jsx)(Z.a,{as:"span",fontWeight:"bold",children:"W"})," ","to add a weight"]}),Object(c.jsx)(Z.a,{as:"li",fontSize:"17px",children:"You can also generate maze and pattern by selecting from the dropdown and click generate Generate Maze button."}),Object(c.jsx)(Z.a,{as:"li",fontSize:"17px",children:'Walls are impenetrable, meaning that a path cannot cross through them. Weights, however, are not impassable. They are simply more "costly" to move through. In this application, moving through a weight node has a "cost" of 15.'})]}),Object(c.jsxs)(ee,{children:[Object(c.jsxs)(Z.a,{fontWeight:"bold",fontSize:"xl",children:["How to relocate start and end nodes"," "]}),Object(c.jsx)(Z.a,{as:"li",fontSize:"17px",children:"Just simply click on start or end node and the mouse pointer will change to the icon of node you clicked on (start or end) and then just simpley click on the node you want start/end node to be at."}),Object(c.jsx)(Z.a,{as:"li",fontSize:"17px",children:"If the grid is dirty ,i.e. there was a previous visualization, relocating start/end node will re-visualize the selected pathfinding algorithm."})]}),Object(c.jsxs)(ee,{children:[Object(c.jsxs)(Z.a,{fontWeight:"bold",fontSize:"xl",children:["Priority Queue"," "]}),Object(c.jsx)(Z.a,{as:"li",fontSize:"17px",children:"Binary Heap is used as a Priority Queue for Dijkstra, A* and Greedy Best First Search."})]}),Object(c.jsx)(k.a,{mt:5,height:"5px",bg:"#0C3547"}),Object(c.jsxs)(k.a,{fontWeight:"bold",children:[Object(c.jsxs)(Z.a,{my:5,as:"h5",fontSize:"xl",children:["This project was inspired by"," ",Object(c.jsx)(Z.a,{as:"a",href:"https://clementmihailescu.github.io/Pathfinding-Visualizer/#",textDecor:"underline",_hover:{color:"teal"},children:"Clement Mihailescu's pathfinding visualizer."})]}),Object(c.jsxs)(Z.a,{my:5,as:"h5",fontSize:"xl",children:["If you want to see the source of this application, you can get it here:"," ",Object(c.jsx)(Z.a,{_hover:{color:"teal"},as:"a",href:"https://github.com/Kaung-HtetKyaw/pathfinding-visualizer",textDecor:"underline",children:"https://github.com/Kaung-HtetKyaw/pathfinding-visualizer"})]}),Object(c.jsxs)(Z.a,{my:5,as:"h5",fontSize:"xl",children:["If you want to see the source of the more generic versions of algorithms implemented in this porject, you can get it here:"," ",Object(c.jsx)(Z.a,{_hover:{color:"teal"},as:"a",href:"https://github.com/Kaung-HtetKyaw/Algorithm-Javascript-Implementation",textDecor:"underline",children:"https://github.com/Kaung-HtetKyaw/Algorithm-Javascript-Implementation"})]}),Object(c.jsx)(Z.a,{my:5,as:"h5",fontSize:"xl",children:"If anyone reading this knows of anything that could make it better, please let me know."})]})]})})]})]})},ne=function(e){var t=e.algorithm,n=void 0===t?"Dijkstra":t,i=e.setAlgorithm,o=e.maze,a=void 0===o?"Random":o,s=e.setMaze,r=e.speed,l=e.setSpeed,h=e.animating,d=e.visualize,u=e.generateMaze,f=e.bomb,g=e.toggleBomb,m=e.clearBoard,b=Object(z.a)({defaultIsOpen:!0}),j=b.onOpen,p=b.onClose,v=b.isOpen;return Object(c.jsxs)(S.a,{maxW:"100%",bg:"#34495E",py:"6",children:[Object(c.jsx)(k.a,{children:Object(c.jsx)(N.a,{color:"white",fontSize:"2xl",children:"Pathfinding Visualizer"})}),Object(c.jsx)(k.a,{mt:3,children:Object(c.jsxs)(W.b,{direction:["column","column","row"],children:[Object(c.jsxs)(W.a,{children:[Object(c.jsx)(k.a,{children:Object(c.jsx)(M.a,{isDisabled:h,onChange:function(e){return i(e.target.value)},width:"120px",defaultValue:n,colorScheme:"teal",color:"white",fontSize:"13px",children:Object.keys(T).map((function(e){return Object(c.jsx)("option",{style:{color:"black",fontSize:"15px"},value:e,children:T[e].name},e)}))})}),Object(c.jsx)(M.a,{isDisabled:h,onChange:function(e){return s(e.target.value)},width:"170px",defaultValue:a,colorScheme:"teal",color:"white",fontSize:"13px",children:Object.keys(Q).map((function(e){return Object(c.jsx)("option",{style:{color:"black",fontSize:"15px"},value:e,children:Q[e].name},e)}))})]}),Object(c.jsx)(W.a,{children:Object(c.jsx)(M.a,{isDisabled:h,onChange:function(e){return l(e.target.value)},width:"170px",defaultValue:r,colorScheme:"teal",color:"white",fontSize:"13px",children:Object.keys(Y).map((function(e){return Object(c.jsx)("option",{style:{color:"black",fontSize:"15px"},value:e,children:e},e)}))})}),Object(c.jsxs)(W.a,{children:[Object(c.jsxs)(C.a,{isDisabled:h,onClick:function(){return d()},colorScheme:"teal",fontSize:"sm",children:["Visualize ",T[n].name]}),Object(c.jsx)(C.a,{isDisabled:h,onClick:function(){return u()},colorScheme:"blue",fontSize:"sm",children:"Generate Maze"})]}),Object(c.jsxs)(W.a,{children:[Object(c.jsxs)(C.a,{isDisabled:h,onClick:function(){return g()},colorScheme:"blue",fontSize:"sm",children:[f?"Remove":"Add"," Bomb"]}),Object(c.jsx)(C.a,{isDisabled:h,onClick:function(){return m()},fontSize:"sm",variant:"ghost",color:"white",_hover:{color:"#34495E",backgroundColor:"white"},children:"Clear Board"})]}),Object(c.jsxs)(W.a,{children:[Object(c.jsx)(C.a,{isDisabled:h,onClick:function(){return j()},colorScheme:"blue",fontSize:"sm",children:"Show Tutorial"}),Object(c.jsx)(te,{onClose:p,onOpen:j,isOpen:v})]})]})})]})},ie=n(121),oe=n(132),ae=n.p+"static/media/triangle-right.c7b52e1e.svg",se=n.p+"static/media/circle.a538beda.svg",re=n.p+"static/media/weight.2e4bdffd.svg",ce=[{name:"Start Node",img:ae},{name:"End Node",img:se},{name:"Weight Node",img:re}],le=[{name:"Unvisited Node",color:["white"]},{name:"Visited Node",color:["#51CFE3","#C573FE"]},{name:"Shortest Path Node",color:["#FCF16A"]},{name:"Wall Node",color:["#0C3547"]}],he=function(e){var t=e.algorithm;return Object(c.jsxs)(S.a,{my:"6",px:10,maxW:"100%",children:[Object(c.jsx)(ie.a,{children:ce.map((function(e){return Object(c.jsxs)(W.a,{px:5,children:[Object(c.jsx)(oe.a,{boxSize:"25px",src:e.img}),Object(c.jsx)(Z.a,{className:!T[t].weighted&&"Weight Node"===e.name&&"strike-through",as:"span",fontSize:"18px",fontWeight:"medium",children:e.name})]},e.name)}))}),Object(c.jsx)(ie.a,{mt:3,children:le.map((function(e){return Object(c.jsxs)(W.a,{px:5,children:[e.color.map((function(e){return Object(c.jsx)(k.a,{mr:"5px",className:"node",bg:e,width:"25px",h:"25px"},e)})),Object(c.jsx)(Z.a,{as:"span",fontSize:"18px",fontWeight:"medium",children:e.name})]},e.name)}))}),Object(c.jsxs)(Z.a,{color:"#0C3547",mt:"6",fontSize:"18px",textAlign:"center",children:[T[t].name," is"," ",Object(c.jsxs)(Z.a,{as:"span",fontStyle:"italic",fontWeight:"bold",children:[T[t].weighted?"weighted":"unweighted"," "]})," ","and",Object(c.jsxs)(Z.a,{fontStyle:"italic",as:"span",fontWeight:"bold",children:[" ",T[t].shortest?"":"does not"," guarantee",T[t].shortest?"s":""]})," ","shortest path"]})]})},de=function(){var e=Object(y.a)(),t=Object(i.useState)([]),n=Object(r.a)(t,2),o=n[0],a=n[1],s=Object(i.useState)({}),l=Object(r.a)(s,2),d=l[0],u=l[1],f=Object(i.useState)({}),g=Object(r.a)(f,2),b=g[0],j=g[1],p=Object(i.useState)("Dijkstra"),v=Object(r.a)(p,2),x=v[0],O=v[1],z=Object(i.useState)("Random"),k=Object(r.a)(z,2),N=k[0],W=k[1],M=Object(i.useState)("Normal"),C=Object(r.a)(M,2),D=C[0],E=C[1],I=Object(i.useState)(!1),B=Object(r.a)(I,2),L=B[0],A=B[1],F=Object(i.useState)(!1),P=Object(r.a)(F,2),R=P[0],U=P[1],V=Object(i.useState)(!1),H=Object(r.a)(V,2),K=H[0],G=H[1],J=Object(i.useState)(!1),_=Object(r.a)(J,2),q=_[0],X=_[1],Z=Object(i.useState)(!1),$=Object(r.a)(Z,2),ee=$[0],te=$[1],ie=Object(i.useState)({x:10,y:15}),oe=Object(r.a)(ie,2),re=oe[0],ce=oe[1],le=Object(i.useState)({x:10,y:30}),de=Object(r.a)(le,2),ue=de[0],fe=de[1],ge=Object(i.useState)(!1),me=Object(r.a)(ge,2),be=me[0],je=me[1];Object(i.useEffect)((function(){a(m(20,50,re,ue))}),[]);var pe=function(){be||A(!1)};Object(i.useEffect)((function(){return document.addEventListener("keydown",ve),function(){return document.removeEventListener("keydown",ve)}}),[]),Object(i.useEffect)((function(){return document.addEventListener("keyup",xe),function(){return document.removeEventListener("keyup",xe)}}),[]);var ve=function(e){be||"w"===e.key&&U(!0)},xe=function(e){be||"w"===e.key&&U(!1)},Oe=function(e,t){be||(ce({x:e,y:t}),G(!1))},ye=function(e,t){be||(fe({x:e,y:t}),X(!1))},Se=function(e,t){be||(e&&(G((function(e){return!e})),X(!1)),t&&(G(!1),X((function(e){return!e}))))},we=function(t,n){if(!ee&&!be&&!K&&!q&&!We(t,n)&&!Me(t,n)&&!R){var i=o[t][n];d[i.name]=!d[i.name]||void 0,e()}},ze=function(t,n,i){if(!ee&&!be&&!K&&!q&&!We(t,n)&&!Me(t,n)&&R&&T[x].weighted){var a=o[t][n];b[a.name]=!b[a.name]||0,e()}},ke=function(e){for(var t=e.length,n=function(n){var i=e[n];setTimeout((function(){n===t-1&&je(!1),b[i.name]?(document.getElementById("node-".concat(i.x,"-").concat(i.y)).classList.add("node-weight-shortest-path"),document.getElementById("node-".concat(i.x,"-").concat(i.y)).classList.add("node-shortest-path")):document.getElementById("node-".concat(i.x,"-").concat(i.y)).classList.add("node-shortest-path")}),30*n)},i=0;i<t;i++)n(i)},Ne=function(){if(!be){var e=o;ee&&(e=m(20,50,re,ue),te(!1),a(e));var t=T[x].algorithm(e,re,ue,d,b);!function(e){e.visitedNodes;var t=e.path,n=e.closedNodes,i=n.length;je(!0);for(var o=function(e){var o=n[e],a=o.x===ue.x&&o.y===ue.y;if(e===i-1&&je(!1),a)return setTimeout((function(){ke(t)}),Y[D]*e),"break";setTimeout((function(){document.getElementById("node-".concat(o.x,"-").concat(o.y)).classList.add("node-visited"),b[o.name]&&document.getElementById("node-".concat(o.x,"-").concat(o.y)).classList.add("node-weight-visited"),document.getElementById("node-".concat(o.x,"-").concat(o.y)).classList.add("node-shortest-path"),setTimeout((function(){document.getElementById("node-".concat(o.x,"-").concat(o.y)).classList.remove("node-shortest-path")}),30)}),Y[D]*e)},a=0;a<i&&"break"!==o(a);a++);}({visitedNodes:t.visitedNodes,path:t.path,closedNodes:t.closedNodes}),te(!0)}};Object(i.useEffect)((function(){ee&&(te(!1),Ne())}),[re,ue]);var We=function(e,t){return re.x===e&&re.y===t},Me=function(e,t){return ue.x===e&&ue.y===t};return Object(c.jsxs)(S.a,{px:0,display:"flex",flexDir:"column",justifyContent:"center",alignItems:"center",maxW:"100%",minH:"100vh",children:[Object(c.jsx)(ne,{algorithm:x,setAlgorithm:O,maze:N,setMaze:W,speed:D,setSpeed:E,animating:be,visualize:Ne,generateMaze:function(){if(!be&&(T[x].weighted||"WeightMaze"!==N)){var e=o;u({}),je(!0),ee&&(e=m(20,50,re,ue),a(e));var t=Q[N].algorithm(e,re,ue);!function(e,t){for(var n=e.length,i=function(i){var o=e[i];setTimeout((function(){i===n-1&&(je(!1),"WeightMaze"===N?j(t):u(t)),"WeightMaze"===N?document.getElementById("node-".concat(o.x,"-").concat(o.y)).classList.add("node-weight"):document.getElementById("node-".concat(o.x,"-").concat(o.y)).classList.add("node-wall")}),Y[D]*i)},o=0;o<n;o++)i(o)}(t.order,t.walls)}},clearBoard:function(){be||(u({}),j({}),a(m(20,50,re,ue)),te(!1),A(!1),G(!1),X(!1),U(!1))}}),Object(c.jsx)(he,{algorithm:x}),Object(c.jsx)(w.a,{cursor:"url(".concat(K?ae:q?se:"","),auto"),my:"5",children:Object(c.jsx)("div",{className:"grid",style:{margin:0},children:o.map((function(e,t){return Object(c.jsx)("div",{style:{margin:0,height:"25px"},children:e.map((function(e,n){var i=e.x,a=e.y,s=e.visited,r=e.name,l=re.x===i&&re.y===a,u=ue.x===i&&ue.y===a,f=b[e.name],g=d[e.name];return Object(c.jsx)(h,{x:i,y:a,start:re,end:ue,grid:o,name:r,isWeight:f,isWall:g,isStart:l,isClosed:e.closed,isEnd:u,visited:s,isGridDirty:ee,isMousePressed:L,isStartSelected:K,isEndSelected:q,toggleSpecialNode:Se,relocateStart:Oe,relocateEnd:ye,handleMouseUp:pe,handleMouseDown:function(e){return function(e,t,n){be||(A(!0),we(e,t),ze(e,t,n))}(i,a,e)},handleMouseEnter:function(e){return function(e,t,n){be||L&&(we(e,t),ze(e,t,n))}(i,a,e)}},"row-".concat(t,"-node-").concat(n))}))},"row-".concat(t))}))})})]})},ue=function(){return Object(c.jsx)(de,{})},fe=(n(104),n(124)),ge=n(127),me=n(123),be=Object(me.a)({config:{initialColorMode:"light",useSystemColorMode:!1}}),je=function(){return Object(c.jsxs)("div",{children:[Object(c.jsx)(fe.a,{initialColorMode:"light"}),Object(c.jsx)(ge.a,{theme:be,children:Object(c.jsx)(ue,{})})]})};s.a.render(Object(c.jsx)(je,{}),document.getElementById("root"))},96:function(e,t,n){}},[[105,1,2]]]);
//# sourceMappingURL=main.4c357af0.chunk.js.map